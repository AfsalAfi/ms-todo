name: CI/CD Pipeline for Docker Compose Application

on:
  push:
    branches:
      - main # Trigger the pipeline on pushes to the main branch

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Step 3: Build and push Docker images
      - name: Build and Push Docker Images
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/gateway:latest -f gateway/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/gateway:latest

          docker build -t ${{ secrets.DOCKER_USERNAME }}/user-service:latest -f user-service/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/user-service:latest

          docker build -t ${{ secrets.DOCKER_USERNAME }}/todo-service:latest -f todo-service/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/todo-service:latest

          docker build -t ${{ secrets.DOCKER_USERNAME }}/client:latest -f client/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/client:latest

      # Step 4: Deploy on EC2
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          script: |
            # Navigate to the application directory
            cd ms-todo

            # Pull the latest images from Docker Hub
            docker-compose pull

            # Restart the application
            docker-compose down || true
            docker-compose up -d
